// src/services/upload.service.js
import { v2 as cloudinary } from 'cloudinary';
import fs from 'fs';
import path from 'path';
import User from '../models/users.model.js';

// C·∫•u h√¨nh Cloudinary t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
cloudinary.config({ 
    cloud_name: process.env.CLOUD_NAME, 
    api_key: process.env.API_KEY, 
    api_secret: process.env.API_SECRET,
});

export const uploadImageToCloudinary = async (userId, filePath) => {
    try {
        // Upload ·∫£nh l√™n Cloudinary
        const uploadResult = await cloudinary.uploader.upload(filePath, {
            folder: 'user_avatars',
            resource_type: 'image'
        });

        // C·∫≠p nh·∫≠t th√¥ng tin avatar cho user
        const updatedUser = await User.findByIdAndUpdate(
            userId,
            {
                avatar: {
                    public_id: uploadResult.public_id,
                    url: uploadResult.secure_url
                }
            },
            { new: true }
        );
        if (!updatedUser) {
            throw new Error("User not found");
        }

        // X√≥a file t·∫°m sau khi upload
        fs.unlinkSync(filePath);

        return {
            user: updatedUser,
            imageUrl: uploadResult.secure_url
        };
        
    } catch (error) {
        // X√≥a file t·∫°m n·∫øu c√≥ l·ªói
        if (fs.existsSync(filePath)) {
            fs.unlinkSync(filePath);
        }
        throw error;
    }
};

export const uploadImagesFromFolder = async (folderPath) => {
    try {
        // L·∫•y danh s√°ch file ·∫£nh trong th∆∞ m·ª•c
        const files = fs.readdirSync(folderPath).filter(file => 
            file.endsWith('.jpg') || file.endsWith('.png') || file.endsWith('.jpeg')
        );

        console.log(`üîç Found ${files.length} images in directory.`);

        // Upload t·ª´ng ·∫£nh (v√≠ d·ª• n√†y ch·ªâ minh h·ªça, b·∫°n c·∫ßn x√°c ƒë·ªãnh userId t∆∞∆°ng ·ª©ng)
        for (const file of files) {
            const filePath = path.join(folderPath, file);
            console.log(`üì§ Uploading: ${file} ...`);

            try {
                // Trong th·ª±c t·∫ø, b·∫°n c·∫ßn x√°c ƒë·ªãnh userId t∆∞∆°ng ·ª©ng v·ªõi m·ªói ·∫£nh
                // ƒê√¢y ch·ªâ l√† v√≠ d·ª•, b·∫°n c·∫ßn ƒëi·ªÅu ch·ªânh theo logic c·ªßa b·∫°n
                const userId = 'someUserId'; // Thay b·∫±ng userId th·ª±c t·∫ø
                
                const result = await uploadImageToCloudinary(userId, filePath);
                console.log(`‚úÖ Upload successful: ${file}`);
                console.log("üîó URL:", result.imageUrl);
            } catch (uploadError) {
                console.error(`‚ùå Error uploading ${file}:`, uploadError);
            }
        }

        console.log("üéâ All images uploaded successfully!");
    } catch (error) {
        console.error("Error:", error);
        throw error;
    }
};